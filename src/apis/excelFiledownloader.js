function downloadExcelFromBase64( fileName = 'SampleData.xlsx') {
  // Decode base64 string into binary data
  const base64Data = "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";
  const byteCharacters = atob(base64Data);
  const byteNumbers = new Array(byteCharacters.length);
  
  for (let i = 0; i < byteCharacters.length; i++) {
    byteNumbers[i] = byteCharacters.charCodeAt(i);
  }
  
  const byteArray = new Uint8Array(byteNumbers);
  
  // Create a Blob with the correct MIME type for Excel
  const blob = new Blob([byteArray], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });
  
  // Create a download link
  const link = document.createElement('a');
  link.href = URL.createObjectURL(blob);
  link.download = fileName;
  
  // Trigger the download
  document.body.appendChild(link);
  link.click();
  
  // Clean up
  document.body.removeChild(link);
  URL.revokeObjectURL(link.href);
}
export default downloadExcelFromBase64;